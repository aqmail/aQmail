--- sig.c	2017-03-02 13:56:28.000000000 +0100
+++ ../../eQmail-1.10.stopped/lib/sig.c	2016-07-20 10:09:37.000000000 +0200
@@ -1,3 +1,7 @@
+/*
+ *  Revision 20160714, Kai Peter
+ *  - added code from newer file 'sig.c' (ucspi-tcp-0.88)
+*/
 #include <signal.h>
 #include "sig.h"
 /* Consolidate the "sig_*.c" functions into one source
@@ -16,107 +20,78 @@
      - sig_bug.c             281    19980615
      - sig_misc.c            318    19980615        */
 
-/* file: sig_alarm.c */
+/* file: sig_alarm.c ************************************************ */
 void sig_alarmblock() { sig_block(SIGALRM); }
 void sig_alarmunblock() { sig_unblock(SIGALRM); }
 void sig_alarmcatch(f) void (*f)(); { sig_catch(SIGALRM,f); }
 void sig_alarmdefault() { sig_catch(SIGALRM,SIG_DFL); }
+int sig_alarm = SIGALRM;
 
-/* file: sig_block.c */
-//#include "hassgprm.h"
-
-void sig_block(sig)
-int sig;
-{
-//#ifdef HASSIGPROCMASK
+/* file: sig_block.c ************************************************ */
+void sig_block(int sig) {
   sigset_t ss;
   sigemptyset(&ss);
   sigaddset(&ss,sig);
   sigprocmask(SIG_BLOCK,&ss,(sigset_t *) 0);
-//#else
-//  sigblock(1 << (sig - 1));
-//#endif
 }
 
-void sig_unblock(sig)
-int sig;
-{
-//#ifdef HASSIGPROCMASK
+void sig_unblock(int sig) {
   sigset_t ss;
   sigemptyset(&ss);
   sigaddset(&ss,sig);
   sigprocmask(SIG_UNBLOCK,&ss,(sigset_t *) 0);
-//#else
-//  sigsetmask(sigsetmask(~0) & ~(1 << (sig - 1)));
-//#endif
 }
 
-void sig_blocknone()
-{
-//#ifdef HASSIGPROCMASK
+void sig_blocknone() {
   sigset_t ss;
   sigemptyset(&ss);
   sigprocmask(SIG_SETMASK,&ss,(sigset_t *) 0);
-//#else
-//  sigsetmask(0);
-//#endif
 }
 
-/* file: sig_catch.c */
-//#include "hassgact.h"
-
-void sig_catch(sig,f)
-int sig;
-void (*f)();
-{
-//#ifdef HASSIGACTION
+/* file: sig_catch.c ************************************************ */
+void sig_catch(int sig,void (*f)()) {
   struct sigaction sa;
   sa.sa_handler = f;
   sa.sa_flags = 0;
   sigemptyset(&sa.sa_mask);
   sigaction(sig,&sa,(struct sigaction *) 0);
-//#else
-//  signal(sig,f); /* won't work under System V, even nowadays---dorks */
-//#endif
 }
 
-/* file: sig_pause.c */
-void sig_pause()
-{
-//#ifdef HASSIGPROCMASK
+/* file: sig_pause.c ************************************************ */
+void sig_pause() {
   sigset_t ss;
   sigemptyset(&ss);
   sigsuspend(&ss);
-//#else
-//  sigpause(0);
-//#endif
 }
 
-/* file: sig_pipe.c */
+/* file: sig_pipe.c ************************************************* */
 void sig_pipeignore() { sig_catch(SIGPIPE,SIG_IGN); }
 void sig_pipedefault() { sig_catch(SIGPIPE,SIG_DFL); }
+int sig_pipe = SIGPIPE;
 
 /* file: sig_child.c */
 void sig_childblock() { sig_block(SIGCHLD); }
 void sig_childunblock() { sig_unblock(SIGCHLD); }
 void sig_childcatch(f) void (*f)(); { sig_catch(SIGCHLD,f); }
 void sig_childdefault() { sig_catch(SIGCHLD,SIG_DFL); }
+int sig_child = SIGCHLD;
 
 /* file: sig_hup.c */
 void sig_hangupblock() { sig_block(SIGHUP); }
 void sig_hangupunblock() { sig_unblock(SIGHUP); }
 void sig_hangupcatch(f) void (*f)(); { sig_catch(SIGHUP,f); }
 void sig_hangupdefault() { sig_catch(SIGHUP,SIG_DFL); }
+int sig_hangup = SIGHUP;
 
 /* file: sig_term.c */
 void sig_termblock() { sig_block(SIGTERM); }
 void sig_termunblock() { sig_unblock(SIGTERM); }
 void sig_termcatch(f) void (*f)(); { sig_catch(SIGTERM,f); }
 void sig_termdefault() { sig_catch(SIGTERM,SIG_DFL); }
+int sig_term = SIGTERM;
 
-/* file: sig_bug.c */
-void sig_bugcatch(f) void (*f)();
-{
+/* file: sig_bug.c ************************************************** */
+void sig_bugcatch(f) void (*f)(); {
   sig_catch(SIGILL,f);
   sig_catch(SIGABRT,f);
   sig_catch(SIGFPE,f);
@@ -129,10 +104,10 @@
   sig_catch(SIGEMT,f);
 #endif
 }
+void (*sig_defaulthandler)() = SIG_DFL;
 
-/* file: sig_misc.c */
-void sig_miscignore()
-{
+/* file: sig_misc.c ************************************************* */
+void sig_miscignore() {
   sig_catch(SIGVTALRM,SIG_IGN);
   sig_catch(SIGPROF,SIG_IGN);
   sig_catch(SIGQUIT,SIG_IGN);
@@ -145,3 +120,7 @@
   sig_catch(SIGXFSZ,SIG_IGN);
 #endif
 }
+void (*sig_ignorehandler)() = SIG_IGN;
+
+int sig_cont = SIGCONT;
+
